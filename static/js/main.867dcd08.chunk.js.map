{"version":3,"sources":["actions/index.js","components/TinyLineChart/TinyLineChart.js","components/WeatherCard/WeatherCard.js","components/WeatherCardList/WeatherCardList.js","components/SimpleBarChart/SimpleBarChart.js","pages/Home.js","App.js","reportWebVitals.js","theme.js","reducers/index.js","api/index.js","sagas/index.js","index.js"],"names":["selectDate","value","type","payload","TinyLineChart","data","chartData","forEach","dataPoint","push","name","dt_txt","temp","main","ResponsiveContainer","width","height","LineChart","Line","dataKey","stroke","strokeWidth","dot","YAxis","domain","hide","defaultProps","WeatherCard","dispatch","useDispatch","tempScale","useSelector","state","selectedDate","CardActionArea","onClick","style","fontFamily","Card","minWidth","backgroundColor","date","CardContent","fontSize","fontWeight","averageTemp","toFixed","dayjs","day","dataPoints","WeatherCardList","Grid","container","spacing","map","item","xs","md","xl","SimpleBarChart","BarChart","CartesianGrid","strokeDasharray","XAxis","tickFormatter","number","console","log","Bar","maxBarSize","fill","Home","weatherData","useState","currentPage","setCurrentPage","totalPages","Math","ceil","length","FormControl","component","RadioGroup","aria-label","onChange","event","target","row","FormControlLabel","control","Radio","label","className","Button","color","startIcon","disabled","endIcon","slice","App","loading","useEffect","CircularProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","background","paper","default","secondary","dark","typography","join","initialState","appReducer","JSON","parse","stringify","action","requestWeatherData","axios","get","handleWeatherData","watcherSaga","getTempScale","getSelectedDate","select","call","response","list","extend","dayjsPluginUTC","uniqueDates","Set","unix","dt","utc","format","filter","reduce","sum","next","put","takeLatest","sagaMiddleware","createSagaMiddelware","middleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.867dcd08.chunk.js","sourcesContent":["export const setWeatherData = (value) => {\r\n    return {\r\n        type: 'SET_WEATHER_DATA',\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const setTemperatureScale = (value) => {\r\n    return {\r\n        type: 'SET_TEMP_SCALE',\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const selectDate = (value) => {\r\n    return {\r\n        type: 'SELECT_DATE',\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const appInit = () => {\r\n    return {\r\n        type: 'APP_INIT'\r\n    };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LineChart, Line, YAxis, ResponsiveContainer } from 'recharts';\r\n\r\nconst TinyLineChart = ({ data }) => {\r\n\r\n    const chartData = [];\r\n\r\n    data.forEach(dataPoint => {\r\n        chartData.push({\r\n            name: dataPoint.dt_txt,\r\n            temp: dataPoint.main.temp\r\n        });\r\n    });\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"40%\">\r\n            <LineChart data={chartData}>\r\n                <Line type=\"monotone\" dataKey=\"temp\" stroke=\"#8884d8\" strokeWidth={2} dot={false} />\r\n                <YAxis type=\"number\" domain={['dataMin', 'dataMax']} hide={true}/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nTinyLineChart.defaultProps = {\r\n    data: []\r\n}\r\n\r\nTinyLineChart.propTypes = {\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default TinyLineChart\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PropTypes from 'prop-types';\r\nimport TinyLineChart from '../TinyLineChart/TinyLineChart';\r\nimport dayjs from 'dayjs';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectDate } from '../../actions/index';\r\n\r\nconst WeatherCard = ({ data }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const tempScale = useSelector(state => state.tempScale);\r\n    const selectedDate = useSelector(state => state.selectedDate);\r\n\r\n    const handleSelect = () => {\r\n        dispatch(selectDate(data));\r\n    };\r\n\r\n\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n    return (\r\n        <CardActionArea onClick={handleSelect} style={{ fontFamily: '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"' }}>\r\n            <Card style={{ height: '150px', minWidth: '350px', backgroundColor: selectedDate.date === data.date ? 'dimgrey' : '' }}>\r\n                <CardContent>\r\n                    <div style={{ fontSize: '2em', fontWeight: 'bold' }}>{data.averageTemp.toFixed(0)} {tempScale === 'imperial' ? (<span>&#x2109;</span>) : (<span>&#8451;</span>)}</div>\r\n                    <div>{days[dayjs(data.date).day()]}, {data.date}</div>\r\n                </CardContent>\r\n                <TinyLineChart data={data.dataPoints}></TinyLineChart>\r\n            </Card>\r\n        </CardActionArea>\r\n    )\r\n}\r\n\r\nWeatherCard.defaultProps = {\r\n    data: {},\r\n}\r\n\r\nWeatherCard.propTypes = {\r\n    data: PropTypes.object,\r\n}\r\n\r\n\r\nexport default WeatherCard\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WeatherCard from '../WeatherCard/WeatherCard';\r\n\r\nconst WeatherCardList = ({ data }) => {\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={4}>\r\n                {data.map((date) => (\r\n                    <Grid key={date?.date} item xs={12} md={4} xl={4}>\r\n                        <WeatherCard data={date} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nWeatherCardList.defaultProps = {\r\n    data: []\r\n}\r\n\r\nWeatherCardList.propTypes = {\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default WeatherCardList\r\n","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SimpleBarChart = ({ data }) => {\r\n\r\n    const tempScale = useSelector(state => state.tempScale);\r\n\r\n    const chartData = [];\r\n\r\n    data.forEach(dataPoint => {\r\n        chartData.push({\r\n            name: dataPoint.dt_txt,\r\n            temp: dataPoint.main.temp\r\n        });\r\n    });\r\n\r\n    const DataFormater = (number) => {\r\n        console.log(number)\r\n        if(tempScale === 'imperial') {\r\n            return number + '°F';\r\n        }\r\n        if(tempScale === 'metric') {\r\n            return number + '°C';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n                width={500}\r\n                height={300}\r\n                data={chartData}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis tickFormatter={DataFormater} />\r\n                <Bar maxBarSize={50} dataKey=\"temp\" fill=\"#8884d8\" />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    )\r\n};\r\n\r\nSimpleBarChart.defaultProps = {\r\n    data: []\r\n}\r\n\r\nSimpleBarChart.propTypes = {\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default SimpleBarChart\r\n","import React from 'react';\r\nimport WeatherCardList from '../components/WeatherCardList/WeatherCardList';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport ArrowForward from '@material-ui/icons/ArrowForward';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport './Home.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTemperatureScale } from '../actions/index';\r\nimport SimpleBarChart from '../components/SimpleBarChart/SimpleBarChart';\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const weatherData = useSelector(state => state.weatherData);\r\n    const tempScale = useSelector(state => state.tempScale);\r\n    const selectedDate = useSelector(state => state.selectedDate);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const pageSize = 3;\r\n    const totalPages = Math.ceil(weatherData.length / pageSize);\r\n\r\n    const handleScaleChange = (event) => {\r\n        dispatch(setTemperatureScale(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <section>\r\n                <div>\r\n                    <h1>City: Berlin, DE</h1>\r\n                </div>\r\n\r\n            </section>\r\n            <section>\r\n                <h1>Forecast</h1>\r\n                <h3>Temperature Scale</h3>\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={tempScale} onChange={handleScaleChange} row>\r\n                        <FormControlLabel value=\"imperial\" control={<Radio />} label=\"Fahrenheit\" />\r\n                        <FormControlLabel value=\"metric\" control={<Radio />} label=\"Celsius\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <div className=\"nav-button-container\">\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        startIcon={<ArrowBack />}\r\n                        onClick={() => setCurrentPage(currentPage - 1)}\r\n                        disabled={currentPage === 1}\r\n                    >\r\n                        Past Forecast\r\n                </Button>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        endIcon={<ArrowForward />}\r\n                        onClick={() => setCurrentPage(currentPage + 1)}\r\n                        disabled={currentPage === totalPages}\r\n                    >\r\n                        Future Forecast\r\n                </Button>\r\n                </div>\r\n\r\n                <div>\r\n                    <WeatherCardList data={weatherData.slice((currentPage - 1) * pageSize, currentPage * pageSize)} />\r\n                </div>\r\n\r\n                {selectedDate?.date &&\r\n                    <div style={{ height: '400px' }}>\r\n                        <h3>Date: {selectedDate?.date}</h3>\r\n                        <SimpleBarChart data={selectedDate?.dataPoints} />\r\n                    </div>\r\n                }\r\n            </section>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\nimport { useDispatch } from 'react-redux';\nimport { appInit } from './actions';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Home from './pages/Home';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const loading = useSelector(state => state.loading);\n\n  useEffect(() => {\n    dispatch(appInit());\n  }, []);\n\n\n  return (\n    <>\n      <div className=\"app-container\">\n        {\n          loading ?\n          <div className=\"loader-container\"><CircularProgress color=\"secondary\"/></div> :\n          <Home />\n        }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme(\r\n    {\r\n        palette: {\r\n            type: 'dark',\r\n            background: {\r\n                paper: \"#333333\",\r\n                default: \"#212121\"\r\n            },\r\n            secondary: {\r\n                main: \"#8884d8\",\r\n                dark: \"#8884d8\"\r\n            }\r\n        },\r\n        typography: {\r\n            fontFamily: [\r\n                '-apple-system',\r\n                'BlinkMacSystemFont',\r\n                '\"Segoe UI\"',\r\n                'Roboto',\r\n                '\"Helvetica Neue\"',\r\n                'Arial',\r\n                'sans-serif',\r\n                '\"Apple Color Emoji\"',\r\n                '\"Segoe UI Emoji\"',\r\n                '\"Segoe UI Symbol\"',\r\n            ].join(','),\r\n        },\r\n    }\r\n)\r\n\r\nexport default theme;","const initialState = {\r\n    weatherData: [],\r\n    tempScale: 'imperial',\r\n    selectedDate: {},\r\n    loading: true\r\n};\r\n\r\nconst appReducer = (state = JSON.parse(JSON.stringify(initialState)), action) => {\r\n    switch (action.type) {\r\n        case 'SET_WEATHER_DATA':\r\n            return { ...state, weatherData: action.payload, loading: false };\r\n        case 'SET_TEMP_SCALE':\r\n            return { ...state, tempScale: action.payload, loading: true };\r\n        case 'SELECT_DATE':\r\n            return { ...state, selectedDate: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default appReducer;","import axios from 'axios';\r\n\r\nexport function requestWeatherData(action) {\r\n    return axios.get(`http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=40&units=${action.payload}`);\r\n}","import { takeLatest, call, put, select } from 'redux-saga/effects';\r\nimport { requestWeatherData } from '../api';\r\nimport { setWeatherData, selectDate } from '../actions';\r\nimport dayjs from 'dayjs';\r\nimport dayjsPluginUTC from 'dayjs-plugin-utc';\r\n\r\nexport const getTempScale = (state) => state.tempScale;\r\nexport const getSelectedDate = (state) => state.selectedDate;\r\n\r\nexport function* handleWeatherData(action) {\r\n    try {\r\n        if (action.type === 'APP_INIT') {\r\n            action.payload = yield select(getTempScale);\r\n        }\r\n        const response = yield call(requestWeatherData, action);\r\n        const data = response.data.list;\r\n\r\n        dayjs.extend(dayjsPluginUTC);\r\n\r\n        const uniqueDates = [...new Set(data.map(item => dayjs.unix(item.dt).utc().format('YYYY-MM-DD')))];\r\n        const weatherData = [];\r\n        uniqueDates.forEach(date => {\r\n            weatherData.push(\r\n                {\r\n                    date,\r\n                    dataPoints: data.filter(item => dayjs.unix(item.dt).utc().format('YYYY-MM-DD') === date)\r\n                }\r\n            )\r\n        });\r\n\r\n        weatherData.forEach(date => {\r\n            date['averageTemp'] = date.dataPoints.reduce((sum, next) => sum + next.main.temp, 0) / date.dataPoints.length;\r\n        });\r\n\r\n        const selectedDate = yield select(getSelectedDate);\r\n        if (selectedDate?.date) {\r\n            console.log(selectedDate)\r\n            yield put(selectDate(weatherData.filter((item) => item.date === selectedDate.date)[0]));\r\n        }\r\n\r\n        yield put(setWeatherData(weatherData));\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport function* watcherSaga() {\r\n    yield takeLatest('APP_INIT', handleWeatherData);\r\n    yield takeLatest('SET_TEMP_SCALE', handleWeatherData);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducer from './reducers';\nimport createSagaMiddelware from 'redux-saga';\nimport { watcherSaga } from './sagas';\n\nconst sagaMiddleware = createSagaMiddelware();\nconst middleware = [sagaMiddleware];\n\nconst store = createStore(appReducer, applyMiddleware(...middleware));\n\nsagaMiddleware.run(watcherSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider >\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}